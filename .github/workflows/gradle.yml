name: Java CD with Gradle
env:
  RESOURCE_PATH: ./ConnectingStar-Back/src/main/resources/*.yml 
on:
  push:
    branches: [ "dev" ] 
  pull_request:
    branches: [ "dev" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set yml file 
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }} 
          spring.datasource.username: ${{ secrets.RDS_ID }} 
          spring.datasource.password: ${{ secrets.RDS_PW }} 
      # (3) Gradlew에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cicdsample
          path: build/libs/*.jar
 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cicdsample

      # SCP로 서버로 전송
      - name: SCP transfer
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.USER_ID }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_KEY }}
          rm: true
          source: ${{ secrets.SOURCE_PATH }}
          target: ${{ secrets.DIST_PATH }}
          ## 작업에 사용했던 dist 디렉토리를 경로상에서 제거
          strip_components: 1
          # 내가 만든 서버 스크립트 실행
      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USER_ID }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            sh action_deploy.sh 
